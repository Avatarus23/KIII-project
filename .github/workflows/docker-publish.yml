---
name: Build, Lint, and Publish Docker Images

on:
  push:
    branches: ['main']

  pull_request:
    branches: ['main']

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/frontend

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full git history needed for Super Linter

      - name: Run Super Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false  # Optional: Set to true to lint the entire codebase
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      statuses: write
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Get the Git commit hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    # Backend
      - name: Build Backend Image
        run: docker buildx build ./backend \
              --file ./backend/Dockerfile \
              --tag "${BACKEND_IMAGE}:${COMMIT_HASH}" \
              --load

      - name: Push Backend Image (commit hash)
        run: docker push "${BACKEND_IMAGE}:${COMMIT_HASH}"

      - name: Tag and Push Backend Image (latest)
        run: |
          docker tag "${BACKEND_IMAGE}:${COMMIT_HASH}" "${BACKEND_IMAGE}:latest"
          docker push "${BACKEND_IMAGE}:latest"

      # Frontend
      - name: Build Frontend Image
        run: docker buildx build ./frontend \
              --file ./frontend/Dockerfile \
              --tag "${FRONTEND_IMAGE}:${COMMIT_HASH}" \
              --load

      - name: Push Frontend Image (commit hash)
        run: docker push "${FRONTEND_IMAGE}:${COMMIT_HASH}"

      - name: Tag and Push Frontend Image (latest)
        run: |
          docker tag "${FRONTEND_IMAGE}:${COMMIT_HASH}" "${FRONTEND_IMAGE}:latest"
          docker push "${FRONTEND_IMAGE}:latest"
